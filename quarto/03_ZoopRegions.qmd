---
title: "ZoopRegions"
format: 
  html:
    fig-width: 12
    fig-height: 6
    fig-align: center
    echo: true
    code-fold: true
    fig-dpi: 100
    warning: false
    message: false
    page-layout: custom
    embed-resources: true
---

::: panel-tabset

# Data

```{r}
library(dplyr) ; library(tidyr) ; library(ggplot2)


### -- 
generating=F
## -- 


root <- rprojroot::has_file(".git/index")
datadir = root$find_file("data")
funsdir = root$find_file("functions")
savingdir = root$find_file("saved_files")

files_vec <- list.files(funsdir)

for( i in 1:length(files_vec)){
  source(root$find_file(paste0(funsdir,'/',files_vec[i])))
}

###############################
## Loading
###############################
df_geo_abiotics = readRDS(file = paste0(savingdir,'/','df_geo_abiotics'))
dfGrump_longer_filtered = readRDS(paste0(savingdir,'/','dfGrump_longer_filtered'))
list_AitDist = readRDS(paste0(savingdir,'/','list_AitDist'))
list_normalized_geo_abiotics_dists = readRDS(file = paste0(savingdir,'/','list_normalized_geo_abiotics_dists'))
list_geo_abiotics_dists = readRDS(file = paste0(savingdir,'/','list_geo_abiotics_dists'))
grid_base = readRDS(file = paste0(savingdir,'/','grid_base'))

```

# Deciding the number of clusters


::: panel-tabset 

## Clusters Geodist Latitude Mirrored

::: panel-tabset 

### Within Sum of Distances

Within Sum 

```{r}
df_evaluation_lat_mirrored = readRDS(paste0(savingdir,'/','df_evaluation_lat_mirrored'))

df_summary = bind_rows(
  df_evaluation_lat_mirrored %>% 
  group_by(ncluster,method,alpha,DistMetric) %>% 
  summarise_all(.funs = mean) %>% mutate(summary_metric='Mean') %>% ungroup() %>% 
  pivot_longer(cols = -c(ncluster,method,alpha,DistMetric,summary_metric),names_to = 'Metric'),
  
  df_evaluation_lat_mirrored %>% 
  group_by(ncluster,method,alpha,DistMetric) %>% 
  summarise_all(.funs = sd) %>% mutate(summary_metric='SD') %>% ungroup() %>% 
  pivot_longer(cols = -c(ncluster,method,alpha,DistMetric,summary_metric),names_to = 'Metric')
)
```

```{r}
#| fig-width: 12
#| fig-height: 8
#| fig-align: center
#| fig-dpi: 150
df_summary %>% filter(Metric=='within_sum') %>% select(-Metric) %>% 
  pivot_wider(id_cols = ncluster:DistMetric,names_from = summary_metric ) %>%
  mutate(alpha=factor(alpha)) %>% 
  ggplot(aes(x=ncluster,y=Mean,color=method,fill=method,linetype=alpha))+
  geom_line()+
  geom_ribbon(aes(ymin=Mean-SD,ymax=Mean+SD),alpha=0.25)+
  facet_grid(DistMetric~alpha,scales = 'free')+
  theme_minimal()+
  theme(legend.position = 'bottom')+
  ggtitle('within_sum')
```

### Within Sum of Squares

Within Sum Squares

```{r}
#| fig-width: 12
#| fig-height: 8
#| fig-align: center
#| fig-dpi: 150

df_summary %>% filter(Metric=='max_max_dist_within') %>% select(-Metric) %>% 
  pivot_wider(id_cols = ncluster:DistMetric,names_from = summary_metric ) %>%
  mutate(alpha=factor(alpha)) %>% 
  ggplot(aes(x=ncluster,y=Mean,color=method,fill=method,linetype=alpha))+
  geom_line()+
  geom_ribbon(aes(ymin=Mean-SD,ymax=Mean+SD),alpha=0.25)+
  facet_grid(DistMetric~alpha,scales = 'free')+
  theme_minimal()+
  #scale_y_continuous(transform = 'log')+
  theme(legend.position = 'bottom')+
  ggtitle('max_max_dist_within')

```
### Within Sum of Squares

Within Sum Squares

```{r}
#| fig-width: 12
#| fig-height: 8
#| fig-align: center
#| fig-dpi: 150

df_summary %>% filter(Metric=='within_sum_sq') %>% select(-Metric) %>% 
  pivot_wider(id_cols = ncluster:DistMetric,names_from = summary_metric ) %>%
  mutate(alpha=factor(alpha)) %>% 
  ggplot(aes(x=ncluster,y=Mean,color=method,fill=method,linetype=alpha))+
  geom_line()+
  geom_ribbon(aes(ymin=Mean-SD,ymax=Mean+SD),alpha=0.25)+
  facet_grid(DistMetric~alpha,scales = 'free')+
  theme_minimal()+
  #scale_y_continuous(transform = 'log')+
  theme(legend.position = 'bottom')+
  ggtitle('within_sum_sq')

```

### Within avg dist to Medoid over Avg Between Medoids

```{r}
#| fig-width: 12
#| fig-height: 8
#| fig-align: center
#| fig-dpi: 150

df_summary %>% filter(Metric=='avg_within_between_dist2medoid') %>% select(-Metric) %>% 
  pivot_wider(id_cols = ncluster:DistMetric,names_from = summary_metric ) %>%
  mutate(alpha=factor(alpha)) %>% 
  ggplot(aes(x=ncluster,y=Mean,color=method,fill=method,linetype=alpha))+
  geom_line()+
  geom_ribbon(aes(ymin=Mean-SD,ymax=Mean+SD),alpha=0.25)+
  facet_grid(DistMetric~alpha,scales = 'free')+
  theme_minimal()+
  theme(legend.position = 'bottom')+
  ggtitle('avg_within_between_dist2medoid')
```

### Avg Max Dist Within

```{r}
#| fig-width: 12
#| fig-height: 8
#| fig-align: center
#| fig-dpi: 150

df_summary %>% filter(Metric=='avg_max_dist_within') %>% select(-Metric) %>% 
  pivot_wider(id_cols = ncluster:DistMetric,names_from = summary_metric ) %>%
  mutate(alpha=factor(alpha)) %>% 
  ggplot(aes(x=ncluster,y=Mean,color=method,fill=method,linetype=alpha))+
  geom_line()+
  geom_ribbon(aes(ymin=Mean-SD,ymax=Mean+SD),alpha=0.25)+
  facet_grid(DistMetric~alpha,scales = 'free')+
  theme_minimal()+
  theme(legend.position = 'bottom')+
  ggtitle('avg_max_dist_within')
```

:::

:::

# Abiotics
```{r}
datapath = root$find_file(paste0(datadir,'/','grump_asv_long.csv'))
dframe = data.table::fread(input = datapath) %>%
  filter(Cruise %in% c('P16N','P16S')) %>% 
  #filter(Raw.Sequence.Counts>0) %>% 
  #filter(Domain!='Unassigned') %>% 
  mutate(Raw.Sequence.Counts = Corrected_sequence_counts) %>% 
  #### New filter by Depth!
  filter(Depth<600)

dat_tax = data.table::fread('https://raw.githubusercontent.com/rafaelcatoia/zoop_16N/main/treated_taxonomy_dat.csv') %>%
  as_tibble()

#### -- now lets subset by only using the ASV that we had before
dframe <- dframe %>% filter(ASV_hash %in% dat_tax$ASV_ID) %>% 
  left_join(dframe %>% filter(ASV_hash %in% dat_tax$ASV_ID) %>% 
              select(ASV_hash) %>% distinct() %>% 
              mutate(ID_ASV_Num = 1:n()) %>% 
              mutate(ID_ASV = ifelse(ID_ASV_Num<10,paste('000',ID_ASV_Num,sep=''),
                                     ifelse(ID_ASV_Num<100,paste('00',ID_ASV_Num,sep=''),
                                            ifelse(ID_ASV_Num<1000,paste('0',ID_ASV_Num,sep=''),
                                                   paste(ID_ASV_Num))))) %>% 
              mutate(ID_ASV = paste0('ASV_',ID_ASV)) %>% 
              select(ASV_hash,ID_ASV)) %>% 
  filter(!is.na(ID_ASV)) 

# dframe %>% 
#   group_by(SampleID) %>% 
#   summarise(SumSeq = sum(Corrected_sequence_counts)) %>% head()
# 
# dframe %>% filter(SampleID=='3335-FRAM-bactV4V5-EGC-3-1plus2-S1-L001') %>% 
#   select(SampleID,ASV_hash,Corrected_sequence_counts) %>% 
#   head()
# 
# dframe %>% filter(SampleID=='3336-FRAM-bactV4V5-EGC-3-3plus4-S2-L001') %>% 
#   select(SampleID,ASV_hash,Corrected_sequence_counts) %>% 
#   head()
# 
# dframe %>% filter(SampleID=='3337-FRAM-bactV4V5-EGC-3-5plus6-S3-L001') %>% 
#   select(SampleID,ASV_hash,Corrected_sequence_counts) %>% 
#   head()


### -----------------------------------------------------------
## Creating abiotics dataframe  -------------------------------
### -----------------------------------------------------------
vet_abiotic = c(
  "Temperature",
  "Salinity",
  "Oxygen",
  "Silicate",
  "NO2",
  "NO3",#this causes duplicates
  #"NH3",#this is empty
  "PO4"
)

## Filtering the abiotics per sample
df_geo_abiotics <- dframe %>%
  select(SampleID,one_of(vet_abiotic),Latitude,Longitude,Depth,Longhurst_Short) %>%
  mutate(Oxygen=ifelse(Oxygen<0,NA,Oxygen),
         NO3=ifelse(NO3<0,NA,NO3)) %>% 
  distinct() %>% arrange(SampleID)

## looking at the samples
library(ggplot2)
df_geo_abiotics %>% ggplot(aes(x=Latitude,y=Depth))+
  geom_point(size=3)+
  scale_y_reverse()+
  theme_minimal()
```


```{r}
#| fig-width: 16
#| fig-height: 8
#| fig-align: center
#| fig-dpi: 150

df_geo_abiotics %>% 
  tidyr::pivot_longer(cols = any_of(vet_abiotic),names_to = 'AbioticFactor') %>% 
  group_split(AbioticFactor) %>% 
  purrr::map(
    ~ggplot(., aes(x=Latitude,y=Depth, color = value)) + 
      geom_point(size = 3) +
      theme_minimal()+
      scale_y_reverse() +
      scale_colour_gradient2(
        low = "deepskyblue", 
        mid = "gray", 
        high = "orange",
        na.value = 'red',
        midpoint = median(.$value,na.rm=T)
      )+
      ggtitle(unique(.$AbioticFactor))
    #facet_wrap(~ AbioticFactor, labeller = function(x) label_value(x, multi_line = FALSE))
  ) %>% 
  cowplot::plot_grid(plotlist = ., align = 'hv' , ncol = 3)
```


```{r}
## Solving the missing problem -------------------------------------------------
df_geo_abiotics <- dframe %>%
  select(SampleID,one_of(vet_abiotic),Latitude,Longitude,Depth,Longhurst_Short) %>%
  distinct() %>% 
  #mutate(Oxygen=ifelse(Oxygen<0,NA,Oxygen),
  #       NO3=ifelse(NO3<0,NA,NO3)) %>% 
  arrange(SampleID)


## Here we have the sample with missing values on Oxygen and NO3
df_geo_abiotics %>% 
  filter(NO3<0 |Oxygen<0) %>%  knitr::kable() %>% kableExtra::kable_styling()


## First inputation = 212.9
```


```{r}
#| fig-width: 16
#| fig-height: 8
#| fig-align: center
#| fig-dpi: 150

df_geo_abiotics %>% filter(Latitude ==18) %>% arrange(Depth)
df_geo_abiotics$Oxygen[df_geo_abiotics$SampleID=='P16N-S40-N10'] <- 212.9

## Second inputation = 0.13 + 2.49 / 2 = 1.375
df_geo_abiotics %>% filter(Latitude ==-18.0) %>% arrange(Depth)
df_geo_abiotics$NO3[df_geo_abiotics$SampleID=='P16S-S05-N15'] <- 1.375

## Third inputation = 346.9
df_geo_abiotics %>% filter(Latitude ==-63.5) %>% arrange(Depth)
df_geo_abiotics$Oxygen[df_geo_abiotics$SampleID=='P16S-S96-N28'] <- 346.9

## This is how it looks after the inputation 
df_geo_abiotics %>% 
  tidyr::pivot_longer(cols = any_of(vet_abiotic),names_to = 'AbioticFactor') %>% 
  group_split(AbioticFactor) %>% 
  purrr::map(
    ~ggplot(., aes(x=Latitude,y=Depth, color = value)) + 
      geom_point(size = 3) +
      theme_minimal()+
      scale_y_reverse() +
      scale_colour_gradient2(
        low = "deepskyblue", 
        mid = "gray", 
        high = "orange",
        na.value = 'red',
        midpoint = median(.$value,na.rm=T)
      )+
      ggtitle(unique(.$AbioticFactor))
    #facet_wrap(~ AbioticFactor, labeller = function(x) label_value(x, multi_line = FALSE))
  ) %>% 
  cowplot::plot_grid(plotlist = ., align = 'hv', ncol = 3)
```

```{r}
rm(dat_tax);rm(dframe)
```

# Clusters 

```{r}
#| fig-width: 16
#| fig-height: 4
#| fig-align: center
#| fig-dpi: 150

D = list_geo_abiotics_dists$aitDist %>% normalizeMatrix()
vet_alpha = c(0,0.05,0.1,0.2)
D1 = as.dist(D)
D2 = as.dist( (1-as.numeric(vet_alpha[1]))*D + as.numeric(vet_alpha[1])*list_normalized_geo_abiotics_dists$geo_Dist_mirrored)
D3 = as.dist( (1-as.numeric(vet_alpha[2]))*D + as.numeric(vet_alpha[2])*list_normalized_geo_abiotics_dists$geo_Dist_mirrored)
D4 = as.dist( (1-as.numeric(vet_alpha[3]))*D + as.numeric(vet_alpha[3])*list_normalized_geo_abiotics_dists$geo_Dist_mirrored)

####################################   Ward    ####################################
#################################### Creating hclust objs
hclust_0 = hclust(d=D1,method='ward.D')
hclust_0.05 = hclust(d=D2,method='ward.D')
hclust_0.10 = hclust(d=D3,method='ward.D')
hclust_0.20 = hclust(d=D4,method='ward.D')

par(mfrow=c(1,4))
plot(hclust_0   ,labels = F,xlab = '',sub = '')
plot(hclust_0.05,labels = F,xlab = '',sub = '')
plot(hclust_0.10,labels = F,xlab = '',sub = '')
plot(hclust_0.10,labels = F,xlab = '',sub = '')
par(mfrow=c(1,1))
```


```{r}
nclusters = 10
#################################### With geodist 
mat_cluster_membership_label <- cbind.data.frame(

  ####################################   pam    ####################################
  pam_a0=cluster::pam(x=D1,k = nclusters,cluster.only = T),
  pam_a0.05=cluster::pam(x=D2,k = nclusters,cluster.only = T),
  pam_a0.10=cluster::pam(x=D3,k = nclusters,cluster.only = T),
  pam_a0.20=cluster::pam(x=D4,k = nclusters,cluster.only = T),
  hclust_a0=cutree(hclust_0   ,k = nclusters),
  hclust_a0.05=cutree(hclust_0.05,k = nclusters),
  hclust_a0.10=cutree(hclust_0.10,k = nclusters),
  hclust_a0.20=cutree(hclust_0.10,k = nclusters)
)
```

```{r}
#| fig-width: 16
#| fig-height: 8
#| fig-align: center
#| fig-dpi: 150

list_df4plot = df_geo_abiotics %>% bind_cols(
  mat_cluster_membership_label
) %>% 
  tidyr::pivot_longer(cols = c(pam_a0,pam_a0.05,pam_a0.10,pam_a0.20,hclust_a0,hclust_a0.05,hclust_a0.10,hclust_a0.20)) %>% 
  mutate(Cluster=as.factor(value),
         method=factor(name,levels=c('pam_a0','pam_a0.05','pam_a0.10','pam_a0.20',
                                     'hclust_a0','hclust_a0.05','hclust_a0.10','hclust_a0.20'))) %>%
  group_split(method) #%>% 


list_df4plot %>% purrr::map(
    ~ggplot(., aes(x=Latitude,y=Depth, label = Cluster,color=Cluster)) + 
      geom_label(size = 3,alpha=0.5) +
      theme_minimal()+
      scale_y_reverse() +
      # scale_colour_gradient2(
      #   low = "deepskyblue", 
      #   mid = "gray", 
      #   high = "orange",
      #   na.value = 'red',
      #   midpoint = median(.$value,na.rm=T)
      # )+
      ggtitle(unique(.$method))+
      theme(legend.position = '')
    #facet_wrap(~ AbioticFactor, labeller = function(x) label_value(x, multi_line = FALSE))
  ) %>% 
  cowplot::plot_grid(plotlist = ., ncol = 4)
```


# Ocean Limits

::: panel-tabset 

## Clusters Before matching

::: panel-tabset 

### n_neigh=10

```{r}
#| fig-width: 25
#| fig-height: 12
#| fig-align: center
#| fig-dpi: 300


if(generating){
  list_cluster_membership_and_bounderies_mirroredLat = readRDS(
    file =  paste0(savingdir,'/','list_cluster_membership_and_bounderies_mirroredLat'))
  
  clust_member_limits = unlist_coloring_obj(list_cluster_membership_and_bounderies_mirroredLat)
  
  plt2 = gen_plots(gridBase = grid_base,clustMemLim = clust_member_limits,df_GeoAbio = df_geo_abiotics)
  saveRDS(plt2,paste0(savingdir,'/','plt2'))
  rm(list_cluster_membership_and_bounderies_mirroredLat)
  rm(clust_member_limits)
}
plt2 = readRDS(paste0(savingdir,'/','plt2'))
plt2$limits_faceted
```

### n_neigh=5

```{r}
#| fig-width: 25
#| fig-height: 12
#| fig-align: center
#| fig-dpi: 300

if(generating){
  list_cluster_membership_and_bounderies_mirroredLat_n5 = readRDS(
    file =  paste0(savingdir,'/','list_cluster_membership_and_bounderies_mirroredLat_n5'))
  
  clust_member_limits = unlist_coloring_obj(list_cluster_membership_and_bounderies_mirroredLat_n5)
  
  plt2_n5 = gen_plots(gridBase = grid_base,clustMemLim = clust_member_limits,df_GeoAbio = df_geo_abiotics)
  saveRDS(plt2_n5,paste0(savingdir,'/','plt2_n5'))
  rm(list_cluster_membership_and_bounderies_mirroredLat_n5)
  rm(clust_member_limits)
}
plt2_n5 = readRDS(paste0(savingdir,'/','plt2_n5'))
plt2_n5$limits_faceted
```

### n_neigh=3

```{r}
#| fig-width: 25
#| fig-height: 12
#| fig-align: center
#| fig-dpi: 300

if(generating){
  list_cluster_membership_and_bounderies_mirroredLat_n3 = readRDS(
    file =  paste0(savingdir,'/','list_cluster_membership_and_bounderies_mirroredLat_n3'))
  
  clust_member_limits = unlist_coloring_obj(list_cluster_membership_and_bounderies_mirroredLat_n3)
  
  plt2_n3 = gen_plots(gridBase = grid_base,clustMemLim = clust_member_limits,df_GeoAbio = df_geo_abiotics)
  saveRDS(plt2_n3,paste0(savingdir,'/','plt2_n3'))
  rm(list_cluster_membership_and_bounderies_mirroredLat_n3)
  rm(clust_member_limits)
}
plt2_n3 = readRDS(paste0(savingdir,'/','plt2_n3'))
plt2_n3$limits_faceted
```

:::


## Clusters after matching

::: panel-tabset 

### n_neigh=10

```{r}
#| fig-width: 25
#| fig-height: 12
#| fig-align: center
#| fig-dpi: 300


if(generating){
  list_cluster_membership_and_bounderies_mirroredLat_matched = readRDS(
    file =  paste0(savingdir,'/','list_cluster_membership_and_bounderies_mirroredLat_matched'))
  list_cluster_membership_and_bounderies_mirroredLat_matched <- list_cluster_membership_and_bounderies_mirroredLat_matched[1:100]
  clust_member_limits = unlist_coloring_obj(list_cluster_membership_and_bounderies_mirroredLat_matched)
  rm(list_cluster_membership_and_bounderies_mirroredLat_matched)
  
  plt3 = gen_plots(gridBase = grid_base,clustMemLim = clust_member_limits,df_GeoAbio = df_geo_abiotics)
  saveRDS(plt3,paste0(savingdir,'/','plt3'))  
  rm(clust_member_limits)
}
plt3 = readRDS(paste0(savingdir,'/','plt3'))
plt3$limits_faceted
```

### n_neigh=5

```{r}
#| fig-width: 25
#| fig-height: 12
#| fig-align: center
#| fig-dpi: 300

if(generating){
  list_cluster_membership_and_bounderies_mirroredLat_matched_n5 = readRDS(
    file = paste0(savingdir,'/','list_cluster_membership_and_bounderies_mirroredLat_matched_n5'))
  list_cluster_membership_and_bounderies_mirroredLat_matched_n5 <- list_cluster_membership_and_bounderies_mirroredLat_matched_n5[1:100]
  clust_member_limits = unlist_coloring_obj(list_cluster_membership_and_bounderies_mirroredLat_matched_n5)
  rm(list_cluster_membership_and_bounderies_mirroredLat_matched_n5)
  
  plt3_n5 = gen_plots(gridBase = grid_base,clustMemLim = clust_member_limits,df_GeoAbio = df_geo_abiotics)
  saveRDS(plt3_n5,paste0(savingdir,'/','plt3_n5'))
  rm(clust_member_limits)
}
plt3_n5 = readRDS(paste0(savingdir,'/','plt3_n5'))
plt3_n5$limits_faceted
```

### n_neigh=3

```{r}
#| fig-width: 25
#| fig-height: 12
#| fig-align: center
#| fig-dpi: 300


if(generating){
  list_cluster_membership_and_bounderies_mirroredLat_matched_n3 = readRDS(
    file =  paste0(savingdir,'/','list_cluster_membership_and_bounderies_mirroredLat_matched_n3'))
  list_cluster_membership_and_bounderies_mirroredLat_matched_n3 <- list_cluster_membership_and_bounderies_mirroredLat_matched_n3[1:100]
  clust_member_limits = unlist_coloring_obj(list_cluster_membership_and_bounderies_mirroredLat_matched_n3)
  rm(list_cluster_membership_and_bounderies_mirroredLat_matched_n3)
  
  plt3_n3 = gen_plots(gridBase = grid_base,clustMemLim = clust_member_limits,df_GeoAbio = df_geo_abiotics)
  saveRDS(plt3_n3,paste0(savingdir,'/','plt3_n3'))
  rm(clust_member_limits)
}
plt3_n3 = readRDS(paste0(savingdir,'/','plt3_n3'))
plt3_n3$limits_faceted
```
:::

:::

# Ocean Regions

::: panel-tabset 

## Clusters Before matching

::: panel-tabset 

### n_neigh=10

```{r}
#| fig-width: 25
#| fig-height: 12
#| fig-align: center
#| fig-dpi: 300

plt2$clustRegion_facetd
```   

### n_neigh=5

```{r}
#| fig-width: 25
#| fig-height: 12
#| fig-align: center
#| fig-dpi: 300

plt2_n5$clustRegion_facetd
```   

### n_neigh=3

```{r}
#| fig-width: 25
#| fig-height: 12
#| fig-align: center
#| fig-dpi: 300

plt2_n3$clustRegion_facetd
```   

:::

## Clusters after matching

::: panel-tabset 

### n_neigh=10

```{r}
#| fig-width: 25
#| fig-height: 12
#| fig-align: center
#| fig-dpi: 300

plt3$clustRegion_facetd
```   

### n_neigh=5

```{r}
#| fig-width: 25
#| fig-height: 12
#| fig-align: center
#| fig-dpi: 300

plt3_n5$clustRegion_facetd
```   

### n_neigh=3

```{r}
#| fig-width: 25
#| fig-height: 12
#| fig-align: center
#| fig-dpi: 300

plt3_n3$clustRegion_facetd
```   

:::

:::

# Tunning Alpha


::: panel-tabset 

### Within Sum of Distances
```{r}
df_evaluation_alpha = readRDS(paste0(savingdir,'/','df_evaluation_alpha'))

df_summary = bind_rows(
  df_evaluation_alpha %>% 
  group_by(method,alpha,DistMetric) %>% 
  summarise_all(.funs = mean) %>% mutate(summary_metric='Mean') %>% ungroup() %>% 
  pivot_longer(cols = -c(method,alpha,DistMetric,summary_metric),names_to = 'Metric'),
  
  df_evaluation_alpha %>% 
  group_by(method,alpha,DistMetric) %>% 
  summarise_all(.funs = sd) %>% mutate(summary_metric='SD') %>% ungroup() %>% 
  pivot_longer(cols = -c(method,alpha,DistMetric,summary_metric),names_to = 'Metric')
)






```

```{r}
#| fig-width: 12
#| fig-height: 8
#| fig-align: center
#| fig-dpi: 150

df_summary %>% filter(Metric=='within_sum') %>%
  select(-Metric) %>% 
  pivot_wider(id_cols = method:DistMetric,names_from = summary_metric ) %>%
  ggplot(aes(x=alpha,y=Mean,color=method,fill=method))+
  geom_line()+
  geom_ribbon(aes(ymin=Mean-SD,ymax=Mean+SD),alpha=0.25)+
  facet_wrap(~DistMetric,scales = 'free')+
  theme_minimal()+
  theme(legend.position = 'bottom')+
  ggtitle('within_sum')

```

### Within Sum of Squares

Within Sum Squares

```{r}
#| fig-width: 12
#| fig-height: 8
#| fig-align: center
#| fig-dpi: 150

df_summary %>% filter(Metric=='within_sum_sq') %>% 
  select(-Metric) %>% 
  pivot_wider(id_cols = method:DistMetric,names_from = summary_metric ) %>%
  ggplot(aes(x=alpha,y=Mean,color=method,fill=method))+
  geom_line()+
  geom_ribbon(aes(ymin=Mean-SD,ymax=Mean+SD),alpha=0.25)+
  facet_wrap(~DistMetric,scales = 'free')+
  theme_minimal()+
  theme(legend.position = 'bottom')+
  ggtitle('within_sum_sq')

```

### Within avg dist to Medoid over Avg Between Medoids

```{r}
#| fig-width: 12
#| fig-height: 8
#| fig-align: center
#| fig-dpi: 150

df_summary %>% filter(Metric=='avg_within_between_dist2medoid') %>% 
  select(-Metric) %>% 
  pivot_wider(id_cols = method:DistMetric,names_from = summary_metric ) %>%
  ggplot(aes(x=alpha,y=Mean,color=method,fill=method))+
  geom_line()+
  geom_ribbon(aes(ymin=Mean-SD,ymax=Mean+SD),alpha=0.25)+
  facet_wrap(~DistMetric,scales = 'free')+
  theme_minimal()+
  theme(legend.position = 'bottom')+
  ggtitle('avg_within_between_dist2medoid')
```

### Avg Max Dist Within

```{r}
#| fig-width: 12
#| fig-height: 8
#| fig-align: center
#| fig-dpi: 150

df_summary %>% filter(Metric=='avg_max_dist_within') %>%
  select(-Metric) %>% 
  pivot_wider(id_cols = method:DistMetric,names_from = summary_metric ) %>%
  ggplot(aes(x=alpha,y=Mean,color=method,fill=method))+
  geom_line()+
  geom_ribbon(aes(ymin=Mean-SD,ymax=Mean+SD),alpha=0.25)+
  facet_wrap(~DistMetric,scales = 'free')+
  theme_minimal()+
  theme(legend.position = 'bottom')+
  ggtitle('avg_within_between_dist2medoid')
```

:::

# Tunning Alpha S Metric

```{r}
#| fig-width: 12
#| fig-height: 8
#| fig-align: center
#| fig-dpi: 150

df_evaluation_alpha = readRDS(paste0(savingdir,'/','df_evaluation_alpha_Smetric'))

df_summary = bind_rows(
  df_evaluation_alpha %>% 
    group_by(method,alpha,DistMetric) %>% 
    summarise_all(.funs = mean) %>% mutate(summary_metric='Mean') %>% ungroup() %>% 
    pivot_longer(cols = -c(method,alpha,DistMetric,summary_metric),names_to = 'Metric'),
  
  df_evaluation_alpha %>% 
    group_by(method,alpha,DistMetric) %>% 
    summarise_all(.funs = sd) %>% mutate(summary_metric='SD') %>% ungroup() %>% 
    pivot_longer(cols = -c(method,alpha,DistMetric,summary_metric),names_to = 'Metric')
)

df_summary %>%
  pivot_wider(id_cols = method:Metric,names_from = summary_metric ) %>%
  filter(Metric=='ratio_within_between') %>% 
  ggplot(aes(x=alpha,y=Mean,color=method,fill=method))+
  geom_line()+
  geom_ribbon(aes(ymin=Mean-SD,ymax=Mean+SD),alpha=0.25)+
  facet_wrap(Metric~DistMetric,scales = 'free')+
  theme_minimal()+
  theme(legend.position = 'bottom')



df_summary %>%
  pivot_wider(id_cols = method:Metric,names_from = summary_metric ) %>%
  filter(Metric=='average_within_group_distances') %>% 
  ggplot(aes(x=alpha,y=Mean,color=method,fill=method))+
  geom_line()+
  geom_ribbon(aes(ymin=Mean-SD,ymax=Mean+SD),alpha=0.25)+
  facet_wrap(Metric~DistMetric,scales = 'free')+
  theme_minimal()+
  theme(legend.position = 'bottom')+
  ggtitle('numerator')


df_summary %>%
  pivot_wider(id_cols = method:Metric,names_from = summary_metric ) %>%
  filter(Metric=='average_between_medoids_distance') %>% 
  ggplot(aes(x=alpha,y=Mean,color=method,fill=method))+
  geom_line()+
  geom_ribbon(aes(ymin=Mean-SD,ymax=Mean+SD),alpha=0.25)+
  facet_wrap(Metric~DistMetric,scales = 'free')+
  theme_minimal()+
  theme(legend.position = 'bottom')+
  ggtitle('denominator')
```


# Cluster Composition

Here I chose $\apha=0.01$ and `ward.D`

::: panel-tabset 

### Aitchison

```{r}
#| layout-ncol: 2
#| layout-nrow: 2

dfPlots = df_geo_abiotics %>%
  bind_cols(mat_cluster_membership_label)

dfGrump_longer_filtered_clustered =  dfGrump_longer_filtered %>% left_join(
  dfPlots %>% transmute(SampleID=SampleID,Cluster = hclust_a0.10)
)

set.seed(1234)
objd_dimRed = distMatrix_dimReduction(
  distMatrix = list_geo_abiotics_dists$aitDist,
  neighUmap = 20,
  perplexityTsne = 3)

dimReduc_obj <- plot_dimReduc_coords(coord_plots = objd_dimRed,clusters = dfPlots$hclust_a0.10)

dimReduc_obj$MDS_2d
dimReduc_obj$nMDS_2d
dimReduc_obj$TSNE_2d
dimReduc_obj$umap_2d
```

### Abiotics
```{r}
#| layout-ncol: 2
#| layout-nrow: 2

set.seed(1234)
objd_dimRed = distMatrix_dimReduction(
  distMatrix = list_geo_abiotics_dists$abioticDist,
  neighUmap = 25,
  perplexityTsne = 25)

dimReduc_obj <- plot_dimReduc_coords(coord_plots = objd_dimRed,clusters = dfPlots$hclust_a0.10)

dimReduc_obj$MDS_2d
dimReduc_obj$nMDS_2d
dimReduc_obj$TSNE_2d
dimReduc_obj$umap_2d
```


:::

:::

